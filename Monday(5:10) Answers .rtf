{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 ArialNarrow;\f2\fnil\fcharset0 Menlo-Regular;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue120;\red234\green234\blue234;\red0\green0\blue0;
\red37\green127\blue159;\red107\green0\blue1;\red109\green109\blue109;\red26\green27\blue29;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c54510;\cssrgb\c93333\c93333\c93333;\cssrgb\c0\c0\c0;
\cssrgb\c16863\c56863\c68627;\cssrgb\c50196\c0\c0;\cssrgb\c50196\c50196\c50196;\cssrgb\c13333\c14118\c14902;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 What are the four access modifiers in Java, and what permission do they have?\
	Private - Accessible only within the class in which it is declared. \
	Public - Widest scope, Accessible everywhere \
	Protected - Accessible only within the class in which it is declared and sub-class in different packages. \
	Default - no access modify specified for a class.  Accessible only within the same package\
\
Create a working example of method overriding. \
	A method that ready exists being declared as a sub-class. \
Example:\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\sl192\slmult1\pardirnatural\partightenfactor0
\cf0 	
\f1\fs26 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 class\cf4 \strokec4  \cf5 \strokec5 Human\cf4 \strokec4 \
\pard\pardeftab720\sl192\slmult1\partightenfactor0
\cf4    	\cf2 \strokec2 public\cf4 \strokec4  \cf2 \strokec2 void\cf4 \strokec4  eat()\
\
      \cf5 \strokec5 System\cf4 \strokec4 .\cf2 \strokec2 out\cf4 \strokec4 .println(\cf6 \strokec6 "Human is eating"\cf4 \strokec4 );\
\
\cf2 \strokec2 	class\cf4 \strokec4  \cf5 \strokec5 Boy\cf4 \strokec4  \cf2 \strokec2 extends\cf4 \strokec4  \cf5 \strokec5 Human\cf4 \strokec4 \
   	\cf7 \strokec7 //Overriding method\cf4 \strokec4 \
   	\cf2 \strokec2 public\cf4 \strokec4  \cf2 \strokec2 void\cf4 \strokec4  eat()\
      \cf5 \strokec5 System\cf4 \strokec4 .\cf2 \strokec2 out\cf4 \strokec4 .println(\cf6 \strokec6 "Boy is eating"\cf4 \strokec4 );\
   \
   	\cf2 \strokec2 public\cf4 \strokec4  \cf2 \strokec2 static\cf4 \strokec4  \cf2 \strokec2 void\cf4 \strokec4  main( \cf5 \strokec5 String\cf4 \strokec4  args[]) \{\
      \cf5 \strokec5 Boy\cf4 \strokec4  obj = \cf2 \strokec2 new\cf4 \strokec4  \cf5 \strokec5 Boy\cf4 \strokec4 ();\
      \cf7 \strokec7 //This will call the child class version of eat()\cf4 \strokec4 \
      obj.eat();
\f2 \cf8 \strokec8 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\
What is a stream?\
	A sequence of objects that supports various methods which can be pipelined to produce the desired result. \
\
Can you list all of the joins in SQL and the use case for each of them.\
	Inner Join - Selects all rows from both tables for as long as the condition is fulfilled. \
	Left Join - Matches rows from the left table to those in the right table and returns the rows in the left table. \
	Right Join - Returns rows on the right of the join that match those in the left table.  \
	Full Join -  Creates a result set by combining both left and right joins.  \
\
How would you explain the concept of a query to a non-technical person. \
	A query is text in form of sentence of statement that is sent to the SQL database engine, however they have to return information in rows.  A specific request. \
\
\
 }