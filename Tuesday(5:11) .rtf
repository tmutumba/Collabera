{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 Helvetica-Bold;\f2\fnil\fcharset0 HelveticaNeue-Italic;
}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10360\viewh14820\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \

\f1\b Removing folders and files in unix?
\f0\b0 \
\

\f2\i rmdir - removes empty directories.  rm -r \
rm - removing directories.
\f0\i0 \
\

\f1\b Hadoop and its Ecosystem? Explain a part of the ecosystem in details? 
\f0\b0 \
\

\f2\i Hadoop is an open-source software platform for storing huge volumes of data and running applications on clusters of commodity software. \
	- Provides massive data storage facilities.\
	- Computational power. \
	- Handle virtually limitless jobs or tasks. \
		- Hadoop has the capability to handle different modes of data (Structured, unstructured and semi-structured data).\
			-Flexibility to collect, process and analyze data. \
The ecosystem is a framework which helps in solving the big data problems. \
	- HDFS (Hadoop distributed file system); storage device and system which runs on java programming language. (Namenode, Datacode) \
	- YARN (Yet Another Resource Negotiator); Brain of the Ecosystem. (Resource Manager, Node Manager)\
	- MapReduce; logic processing, enables us in writing applications that process large data sets.  \
	- Common; Apache Spark, Hive, H Base, H Catalogue, \

\f0\i0 \

\f1\b Talk about Multi-threading and how it is implemented?\
\

\f2\i\b0 A multi-threading allows multiple threads of control within a process. A thread is a single sequential flow of control. (Runnable, NEW, Blocked, Waiting, Timed waiting, Terminated)\
\
Threading can be implemented in two ways:\
	- Extending Thread class\
	- Implementing Runnable interface
\f0\i0 \
\

\f1\b Transitive Dependencies in Maven project? \
\

\f2\i\b0 Avoid the need to discover and specify the libraries that your own dependencies require. \

\f0\i0 \

\f1\b Interfaces and Abstract class? Differences and Use?
\f0\b0 \
\

\f2\i Abstraction: Hiding the internal implementation of the feature and only showing the functionality of the users. \
Interfaces: Methods and variables, shows what the class should do and not how. A blueprint of a class.\

\f0\i0 \

\f1\b Differences:
\f0\b0 \
Interfaces							Abstraction\

\f2\i - Only abstract methods				- Both abstract and non methods\
- Default Classes					- No final variables\
- Static and final variables 				- All variables are supported(static, final, non-static )\
- 							- Implementation of an interface. 
\f0\i0 \
\
\
\
\
  \
}